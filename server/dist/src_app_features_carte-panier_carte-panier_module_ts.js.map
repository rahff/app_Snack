{"version":3,"file":"src_app_features_carte-panier_carte-panier_module_ts.js","mappings":"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AAgC,sDAAe,CAAC,iDAAa;AACtH,oCAAoC,gEAAyB,GAAG,mDAAmD;AACnH;AACA;AACA,MAAM,MAAM,iDAAM;AAClB;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB,KAAK,iBAAiB,UAAU,MAAM,iDAAa,EAAE,IAAI,UAAU;AACnE,IAAI,KAAK,EAAE,EAMV;;AAED;AACA;AACA;AACA,cAAc,wHAAwH;AACtI;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,+CAA+C,4BAA4B;AAC3E;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA,wBAAwB,wBAAwB;AAChD,uBAAuB,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB,GAAG,iBAAiB;AAClE;AACA;AACA;AACA;AACA,qEAAqE,sCAAsC,sDAAe;AAC1H,0CAA0C,gEAAyB,GAAG,+DAA+D;AACrI;AACA;AACA,MAAM;AACN;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB,KAAK,iBAAiB,UAAU,qBAAqB,IAAI,UAAU;AACnE,IAAI,KAAK,EAAE,EAWV;;AAED;AACA;AACA;AACA,cAAc,wHAAwH;AACtI;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAY;AAC5C,iCAAiC,yCAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA,uBAAuB,GAAG;AAC1B,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,uBAAuB,GAAG;AAC1B;AACA,uBAAuB,GAAG;AAC1B,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,uBAAuB,GAAG;AAC1B;AACA,uBAAuB,GAAG;AAC1B,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,uBAAuB,GAAG;AAC1B,8EAA8E;AAC9E,2BAA2B,GAAG;AAC9B,2BAA2B,GAAG;AAC9B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,GAAG;AACtC;AACA;AACA;AACA,uCAAuC,GAAG;AAC1C,wCAAwC;AACxC;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,2BAA2B,GAAG;AAC9B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,2BAA2B,GAAG;AAC9B,2BAA2B,GAAG;AAC9B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,2BAA2B,GAAG;AAC9B,2BAA2B,GAAG;AAC9B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,2BAA2B,GAAG;AAC9B,2BAA2B,GAAG;AAC9B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,GAAG,mEAAmE,aAAa,oCAAoC,oBAAoB,kCAAkC,kBAAkB;AAChN,qDAAqD,6BAA6B;AAClF,SAAS;AACT;AACA;AACA,mEAAmE,qCAAqC,+DAAwB,uBAAuB,+DAAwB,CAAC,4DAAwB,GAAG,+DAAwB,CAAC,iDAAa;AACjP,wCAAwC,+DAAwB,GAAG,+GAA+G;AAClL,QAAQ,yDAAkB;AAC1B,MAAM;AACN;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,OAAO,YAAY,oDAAoD,aAAa,8BAA8B,aAAa,kEAA2B,oIAAoI;AAC9R,QAAQ,uDAAgB;AACxB,MAAM;AACN,QAAQ,wDAAiB;AACzB,OAAO,wCAAwC;AAC/C;AACA;AACA,MAAM,2BAA2B;AACjC,MAAM,MAAM,4DAAiB,EAAE;AAC/B,MAAM,MAAM,iDAAM;AAClB;AACA;AACA,eAAe,MAAM,gDAAK,EAAE;AAC5B,uBAAuB,MAAM,gDAAK,EAAE;AACpC,qBAAqB,MAAM,iDAAM,EAAE;AACnC,8BAA8B,MAAM,oDAAS,oCAAoC,eAAe,IAAI;AACpG;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA,iCAAiC,yEAA8B;AAC/D;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU,2BAA2B,IAAI,MAAM,4DAAwB,EAAE,IAAI,MAAM,iDAAa,EAAE,IAAI,IAAI;AAChI,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAS;AAC3B,8CAA8C,eAAe;AAC7D,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS,GAAG,IAAI;AAChB,IAAI,KAAK,EAAE,EA2DV;;AAED;AACA;AACA;AACA,cAAc,wHAAwH;AACtI;AACA;AACA;AACA,6DAA6D;AAC7D,qCAAqC,8DAAuB,GAAG,uBAAuB;AACtF,qCAAqC,8DAAuB,GAAG;AAC/D;AACA;AACA;AACA,YAAY,yDAAY;AACxB,YAAY;AACZ,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,mDAAQ;AACtB;AACA;AACA,oBAAoB,yDAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;AACtB,eAAe,mDAAmD,gEAAyB,oBAAoB,4BAA4B,8BAA8B,yBAAyB,QAAQ,yDAAY,IAAI,yBAAyB,gCAAgC,IAAI;;AAEvR;AACA;AACA;AACA,cAAc,wHAAwH;AACtI;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAsFV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAWV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAiBV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAGV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAOV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAOV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAOV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAOV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAGV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAGV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAOV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAeV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EASV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAeV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAiBV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAGV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAqBV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAeV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAOV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAeV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAeV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAaV;AACD;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAKV;;AAED;AACA;AACA;AACA,cAAc,wHAAwH;AACtI;;AAEA;AACA;AACA;AACA,cAAc,wHAAwH;AACtI;;AAEyF","sources":["./src/app/features/carte-panier/carte-menu/carte-menu.component.ts","./src/app/features/carte-panier/carte-menu/carte-menu.component.html","./src/app/features/carte-panier/carte-menu/carte/carte.component.ts","./src/app/features/carte-panier/carte-menu/carte/carte.component.html","./src/app/features/carte-panier/carte-panier.module.ts","./src/app/features/carte-panier/carte-panier.routes.ts","./src/app/features/carte-panier/panier/panier.component.ts","./src/app/features/carte-panier/panier/panier.component.html","./src/app/features/carte-panier/paypal/paypal.component.ts","./src/app/features/carte-panier/paypal/paypal.component.html","./src/app/features/carte-panier/success/success.component.ts","./src/app/features/carte-panier/success/success.component.html","./src/app/shared/models/cart.ts","./src/app/shared/models/item.ts","./src/app/shared/services/cart.service.ts","./node_modules/ngx-paypal/__ivy_ngcc__/fesm2015/ngx-paypal.js"],"sourcesContent":["import { Component, DoCheck, OnChanges, OnDestroy, OnInit,Output  } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Cart } from 'src/app/shared/models/cart';\nimport { Product } from 'src/app/shared/models/product';\nimport { CartService } from 'src/app/shared/services/cart.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\n\n\n@Component({\n  selector: 'app-carte-menu',\n  templateUrl: './carte-menu.component.html',\n  styleUrls: ['./carte-menu.component.css'],\n})\nexport class CarteMenuComponent implements OnInit, OnDestroy {\n\n  public nbrOfItem: number;\n  private subscription: Subscription = new Subscription();\n  public productList: Product[];\n  public itemList: Product[];\n  param: string;\n  constructor(private cartService: CartService,\n              private productService: ProductService,\n              private activatedRoute: ActivatedRoute) {}\n\n         \n  ngOnInit(): void {\n    console.log('init carte-menu');\n    \n    this.activatedRoute.paramMap.subscribe((param: ParamMap) =>{\n      this.param = param.get('product');\n      })\n    this.subscription.add(this.cartService.cart$.subscribe((cart: Cart)=>{\n      if(cart){\n        this.nbrOfItem = cart.nbrOfItem;\n      }else{\n        this.cartService.emitCart();\n      }\n    }));\n    this.subscription.add(this.productService.product$.subscribe((products: Product[]) => {\n      if (!products){\n        this.productService.getProductList();\n      }else{\n        this.productList = products;\n        this.itemList = this.productList.filter(p => p.category === +this.param);\n      }\n    }));\n    \n  }\n  changeProductList(index: number): void {\n    console.log(this.param);\n    this.itemList = this.productList.filter(p => p.category === index);\n    console.log(this.itemList);\n    \n  }\n  ngOnDestroy(): void {\n   this.subscription.unsubscribe();\n  }\n}\n\n","\n<header>\n    <div class=\"container-fluid\">\n        <div class=\"panier\" routerLink=\"/page-menu/panier\">\n            Panier\n        <i routerLink=\"/page-menu/panier\" class=\"bi bi-bag\"> <div *ngIf=\"nbrOfItem\" class=\"icon-panier\"> {{nbrOfItem}} </div></i>\n        </div>\n    </div>\n    <div class=\"menu\">\n        <ul class=\"d-flex\">\n            <li [routerLink]=\"['/page-menu/carte',1]\" (click)=\"changeProductList(1)\" routerLinkActive=\"active\" class=\"nav-carte-item \">Tacos</li>\n            <li [routerLink]=\"['/page-menu/carte',2]\" (click)=\"changeProductList(2)\" routerLinkActive=\"active\" class=\"nav-carte-item\">Kebabs</li>\n            <li [routerLink]=\"['/page-menu/carte',3]\" (click)=\"changeProductList(3)\" routerLinkActive=\"active\" class=\"nav-carte-item\">Burgers</li>\n        </ul>\n        <ul class=\"d-flex\">\n            <li [routerLink]=\"['/page-menu/carte',4]\" (click)=\"changeProductList(4)\" routerLinkActive=\"active\" class=\"nav-carte-item\">Boissons</li>\n            <li [routerLink]=\"['/page-menu/carte',5]\" (click)=\"changeProductList(5)\" routerLinkActive=\"active\" class=\"nav-carte-item\">Dessert</li>\n            <li [routerLink]=\"['/page-menu/carte',6]\" (click)=\"changeProductList(6)\" routerLinkActive=\"active\" class=\"nav-carte-item\">Plats</li>\n        </ul>\n    </div>\n</header>\n\n<app-carte [productList]=\"itemList\"></app-carte>","import { Component, ElementRef, Input, OnChanges, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Product } from 'src/app/shared/models/product';\nimport { CartService } from 'src/app/shared/services/cart.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\n\n\n@Component({\n  selector: 'app-carte',\n  templateUrl: './carte.component.html',\n  styleUrls: ['./carte.component.css'],\n})\nexport class CarteComponent implements OnInit, OnChanges {\n  public openModal = false;\n  public openAddToCart = false;\n  public name: string;\n  public truc: string;\n  public nbr = 1;\n  public param: string;\n  @Input() private productList: Product[];\n  public itemList: Product[];\n  constructor(private cartService: CartService) {}\n\n  ngOnChanges(): void {\n    this.itemList = this.productList;\n  }\n  ngOnInit(): void {\n    console.log('init');\n    console.log(this.itemList);\n    \n    \n  }\n  openerModal(name?: string): void {\n    this.openModal = !this.openModal;\n    this.name = name;\n  }\n  openerAddToCart(name?: string): void {\n    this.openAddToCart = !this.openAddToCart;\n    this.truc = name;\n    this.nbr = 1;\n  }\n  addToCart(product: Product): void {\n    const quantity = this.nbr;\n    this.openerAddToCart();\n    this.cartService.addToCart(product, quantity);\n  }\n  increment(): void {\n    this.nbr++;\n  }\n  decrement(): void {\n    if(this.nbr >=1){\n      this.nbr--;\n    }else if(this.nbr === 0){\n      this.openerAddToCart();\n    }\n  }\n \n}\n","<div class=\"container-fluid flex-col\">\n\n    <div class=\"card-product-item\" *ngFor=\"let product of itemList\"> \n        <img [src]=\"product.image\" alt=\"tacos\" class=\"product\">\n    <div class=\"title-product\">\n        <h1>{{product.name}}</h1>\n        <h1>{{product.price / 100}} €</h1>\n        <div *ngIf=\"openModal && name === product.name\" class=\"modal\">\n            <div (click)=\"openerModal()\" class=\"close-modal\">\n                <i class=\"bi bi-x-square-fill\"></i>\n            </div>\n            <ul class=\"ingredients-list\">\n                <li class=\"ingredient-item\" *ngFor=\"let ingredient of product.ingredients\">\n                    {{ingredient}}\n                </li>\n            </ul>\n        </div>\n        <div *ngIf=\"openAddToCart && truc === product.name\" class=\"modal\">\n            <div (click)=\"openerAddToCart()\" class=\"close-modal\">\n                <i class=\"bi bi-x-square-fill\"></i>\n            </div>\n            <div class=\"flex-col flex-center\">\n            <label>Quantité</label>\n           <div class=\"container\">\n               <div class=\"quantity\">\n                   {{nbr}}\n               </div>\n               <div class=\"flex-center flex-col\">\n                    <button (click)=\"increment()\" class=\"success qty\">+</button>\n                    <button (click)=\"decrement()\" class=\"success qty\">-</button>\n               </div>\n           </div>\n           </div>\n            <button (click)=\"addToCart(product)\" class=\"btn success\"> \n                <i class=\"bi bi-star\"></i> Ajouter au Panier\n            </button>\n    </div>\n        <button (click)=\"openerModal(product.name)\" class=\"btn btn-warning\"> \n            <i class=\"bi bi-star\"></i> Liste des Ingrédients \n        </button>\n        <button (click)=\"openerAddToCart(product.name)\" class=\"btn btn-warning\"> \n            <i class=\"bi bi-star\"></i> Ajouter au Panier\n        </button>\n    \n    </div>\n    </div>\n    \n    </div>\n","import { NgModule } from '@angular/core';\n\n\nimport { CarteMenuComponent } from 'src/app/features/carte-panier/carte-menu/carte-menu.component';\nimport { PanierComponent } from 'src/app/features/carte-panier/panier/panier.component';\nimport { PaypalComponent } from 'src/app/features/carte-panier/paypal/paypal.component';\nimport { SuccessComponent } from 'src/app/features/carte-panier/success/success.component';\nimport { NgxPayPalModule } from 'ngx-paypal';\nimport { RouterModule } from '@angular/router';\nimport { CARTE_PANIER_ROUTES } from './carte-panier.routes';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CarteComponent } from './carte-menu/carte/carte.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    CarteMenuComponent,\n    PanierComponent,\n    PaypalComponent,\n    SuccessComponent,\n    CarteComponent\n  ],\n  imports: [\n    NgxPayPalModule,\n    RouterModule.forChild(CARTE_PANIER_ROUTES),\n    SharedModule,\n  ]\n})\nexport class CartePanierModule { }\n","import { Routes } from '@angular/router';\n\nimport { CarteMenuComponent } from './carte-menu/carte-menu.component';\nimport { PanierComponent } from './panier/panier.component';\nimport { SuccessComponent } from './success/success.component';\n\nexport const CARTE_PANIER_ROUTES: Routes = [\n  {\n    path: '',\n   redirectTo:'carte/1'\n  },\n  {\n    path: 'carte/:product',\n    component: CarteMenuComponent,\n  },\n\n  {\n    path: 'panier',\n    component: PanierComponent,\n  },\n  {\n    path: 'commande-success',\n    component: SuccessComponent,\n  },\n];\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Cart } from 'src/app/shared/models/cart';\nimport { JwtToken } from 'src/app/shared/models/jwt-token';\nimport { Product } from 'src/app/shared/models/product';\nimport { CartService } from 'src/app/shared/services/cart.service';\nimport { UserService } from 'src/app/shared/services/user.service';\n\n\n@Component({\n  selector: 'app-panier',\n  templateUrl: './panier.component.html',\n  styleUrls: ['./panier.component.css']\n})\nexport class PanierComponent implements OnInit, OnDestroy {\n\n  public isLoading: boolean;\n  public color = 'green'\n  private subcription: Subscription = new Subscription();\n  public cart: Cart;\n  constructor(private cartService: CartService,\n              private userService: UserService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.subcription.add(this.userService.jwtToken$.subscribe((jwtToken: JwtToken)=>{\n      if(jwtToken.isAuth){\n        return;\n      }else{\n        this.router.navigate(['/login']);\n      }\n    }))\n   this.subcription.add(this.cartService.cart$.subscribe((cart: Cart)=>{\n      this.cart = cart;\n    }));\n  }\n  deleteItem(product: Product){\n    this.cartService.removeItem(product);\n    console.log(this.cart);\n    console.log(this.cartService.cart);\n    \n  }\n  onLoad(event: boolean){\n    this.isLoading = event;\n  }\n  ngOnDestroy(): void {\n    this.subcription.unsubscribe();\n  }\n}\n","<h1 *ngIf=\"cart.items.length && isLoading\">Votre Panier</h1>\n<div class=\"vh-50 flex-center flex-col\" *ngIf=\"!cart.items.length\">\n  <h1>Votre Panier est vide !</h1>\n  <button routerLink=\"/page-menu\" class=\"btn btn-warning\">Commander</button>\n</div>\n<div *ngIf=\"!isLoading\">\n<div class=\"container-fluid\" *ngIf=\"cart.items.length\">\n  <div class=\"flex-col w-80\">\n    <div class=\"cart-item\" *ngFor=\"let item of cart.items\">\n     <div>\n      {{ item.quantity }} {{ item.product.name }}\n    </div> \n    <div class=\"actions\">\n      <button (click)=\"deleteItem(item.product)\" class=\"suppr\"><i class=\"bi bi-trash\"></i></button>\n    </div>\n    </div>\n    <div class=\"cart-item\">TOTAL DE LA COMMANDE :</div>\n   \n  </div>\n  <div class=\"flex-col w-20\">\n    <div class=\"price-item\" *ngFor=\"let item of cart.items\">\n      {{ item.cost / 100 }} €\n    </div>\n    <div class=\"price-item\">\n        {{cart.total / 100}} €\n    </div>\n  </div>\n</div>\n</div>\n<div class=\"spinner\" *ngIf=\"isLoading\">\n  <mat-spinner class=\"load\" diameter=\"250\" color=\"primary\"></mat-spinner>\n</div>\n<div class=\"button-paypal\">\n  <app-paypal (loading)=\"onLoad($event)\" [totalCommande]=\"(cart.total / 100)\" *ngIf=\"cart.items.length\"></app-paypal>\n</div>\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ICreateOrderRequest, IPayPalConfig } from 'ngx-paypal';\n\nimport { CartService } from 'src/app/shared/services/cart.service';\nimport { OrderService } from 'src/app/shared/services/order.service';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-paypal',\n  templateUrl: './paypal.component.html',\n  styleUrls: ['./paypal.component.css'],\n})\nexport class PaypalComponent implements OnInit {\n  @Input() public totalCommande;\n  public paypalConfig: IPayPalConfig;\n  private idPaypal = environment.PAYPAL_ID_CLIENT;\n  private currency = environment.CURRENCY;\n  private userInfos;\n  @Output() private loading: EventEmitter<boolean> = new EventEmitter()\n  private detail: any[] = [];\n  constructor(private cartService: CartService,\n              private router: Router,\n              private userService: UserService,\n              private orderService: OrderService) {}\n\n  ngOnInit(): void {\n      this.userService.currentUser$.subscribe((user: any) =>{\n      this.userInfos = user;\n    });\n  \n    \n    this.initConfig();\n  }\n\n  initConfig(): void {\n    const currency = this.currency;\n    const clientId = this.idPaypal;\n    const price = this.totalCommande;\n    this.paypalConfig = {\n      currency,\n      clientId,\n      createOrderOnClient: (data) =>\n        // tslint:disable-next-line: no-angle-bracket-type-assertion\n        <ICreateOrderRequest>{\n          intent: 'CAPTURE',\n          purchase_units: [\n            {\n              amount: {\n                currency_code: currency,\n                value: price,\n                breakdown: {\n                  item_total: {\n                    currency_code: currency,\n                    value: price,\n                  },\n                },\n              },\n              items: [\n                {\n                  name: 'Snack Tacos',\n                  quantity: '1',\n                  category: 'PHYSICAL_GOODS',\n                  unit_amount: {\n                    currency_code: currency,\n                    value: price,\n                  },\n                },\n              ],\n            },\n          ],\n        },\n      advanced: {\n        commit: 'true',\n      },\n      style: {\n        label: 'buynow',\n        layout: 'vertical',\n        size:'responsive'\n      },\n      onApprove: (data, actions) => {\n     \n        this.loading.emit(true);\n        for (let item of this.cartService.cart.items) {\n          const obj = {product: item.product.name, quantity: item.quantity, cost: (item.cost / 100)};\n          this.detail.push(obj);\n        }\n        \n\n        console.log(\n          'onApprove - transaction was approved, but not authorized',\n          data,\n          actions\n        );\n        actions.order.get().then((details) => {\n          console.log(\n            'onApprove - you can get full order details inside onApprove: ',\n            details\n          );\n        });\n      },\n      onClientAuthorization: (data) => {\n        console.log(\n          'onClientAuthorization - you should probably inform your server about completed transaction at this point',\n          data\n        );\n        // create order//\n        if (data.status === 'COMPLETED'){\n          const numeroCommande = data.id;\n          const order = {detail: this.detail, user: this.userInfos, montant: +price, numero: numeroCommande, date: new Date()};\n          this.orderService.createOrder(order).then((ok: boolean) => {\n            console.log((\"inthen createOrder\"));\n              this.cartService.reinitCart();\n              this.router.navigate(['/page-menu/commande-success']);\n          }).catch((err) => {\n            console.log(\"inCatchCreateOrder\");\n            \n              console.log(err);\n              this.loading.emit(false);\n          });\n        }\n       \n      },\n      onCancel: (data, actions) => {\n        console.log('OnCancel', data, actions);\n        this.loading.emit(false);\n      },\n      onError: (err) => {\n        console.log('OnError', err);\n        this.loading.emit(false);\n      },\n      onClick: (data, actions) => {\n        console.log('onClick', data, actions);\n      },\n    };\n  }\n}\n","<ngx-paypal [config]=\"paypalConfig\"></ngx-paypal>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css']\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"flex-center\">\n    <h1>Votre commande est Valider !</h1>\n    <i class=\"bi bi-emoji-smile\"></i>\n    <button routerLink=\"/\" class=\"btn btn-warning\">Retour au menu</button>\n</div>\n","import { Item } from './item';\n\nexport class Cart {\n  items: Item[];\n  nbrOfItem = 0;\n  total = 0;\n}\n","import { Product } from './product';\n\nexport class Item {\n  product: Product;\n  quantity = 0;\n  cost = 0;\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Cart } from '../models/cart';\nimport { Item } from '../models/item';\nimport { Product } from '../models/product';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  public cart$ = new BehaviorSubject<Cart>(null);\n  public cart: Cart = new Cart();\n  constructor() {\n    this.cart.items = [];\n    this.checkLocalStorage();\n    this.emitCart();\n  }\n\n  addToCart(newProduct: Product, quantity: number): void {\n    const isOnCart = this.cart.items.find(item => item.product.name === newProduct.name);\n    if (!isOnCart){\n      const newItem = new Item();\n      newItem.product = newProduct;\n      newItem.quantity = quantity;\n      newItem.cost = newProduct.price * quantity;\n      this.cart.items.push(newItem);\n      this.cart.nbrOfItem += quantity;\n      this.cart.total += newProduct.price * quantity;\n      this.emitCart();\n    }else{\n      isOnCart.quantity += quantity;\n      isOnCart.cost += newProduct.price * quantity;\n      this.cart.nbrOfItem += quantity;\n      this.cart.total += newProduct.price * quantity;\n      this.emitCart();\n    }\n    }\n  removeItem(product: Product): void {\n    const removed = this.cart.items.find((i) => i.product === product);\n    if (removed) {\n      const index = this.cart.items.indexOf(removed);\n      this.cart.items.splice(index, 1);\n      const nbrOfDeleted = removed.quantity;\n      const newNbrOfItem = this.cart.nbrOfItem - nbrOfDeleted;\n      this.cart.nbrOfItem = newNbrOfItem;\n      const costDeleted = removed.cost;\n      const newCostTotalCart = this.cart.total - costDeleted;\n      this.cart.total = newCostTotalCart;\n      this.emitCart();\n    }else{\n      return;\n    }\n  }\n  removeOne(product: Product): void {\n    const item = this.cart.items.find((i) => i.product === product);\n    if (item) {\n      if (item.quantity > 1) {\n        item.quantity--;\n        item.cost -= item.cost;\n        this.cart.nbrOfItem--;\n        const newTotalOfCart = this.cart.total - product.price;\n        this.cart.total = newTotalOfCart;\n      } else {\n        const index = this.cart.items.indexOf(item);\n        this.cart.items.splice(index, 1);\n        const itemCost = item.cost;\n        this.cart.nbrOfItem --;\n        const newTotalOfCart = this.cart.total - itemCost;\n      }\n      this.emitCart();\n    }else{\n      return;\n    }\n  }\n  reinitCart(): void {\n    this.cart.items = [];\n    this.cart.nbrOfItem = 0;\n    this.cart.total = 0;\n    this.emitCart();\n  }\n  emitCart(): void {\n    this.cart$.next(this.cart);\n    this.saveCartOnStorage();\n  }\n  saveCartOnStorage(): void{\n    const asCart = localStorage.getItem('cart');\n    if (asCart){\n      localStorage.removeItem('cart');\n      localStorage.setItem('cart', JSON.stringify(this.cart));\n    }else{\n      localStorage.setItem('cart', JSON.stringify(this.cart));\n    }\n  }\n  checkLocalStorage(): void {\n    const cartLocal = localStorage.getItem('cart');\n    if (cartLocal){\n      this.cart = JSON.parse(cartLocal);\n    }\n  }\n  refreshCommande(detail:{product: string, quantity: number, cost: number}[]): void {\n    this.reinitCart();\n    for(let i = 0; i < detail.length; i++){\n      const item = new Item();\n      item.product = {name: detail[i].product, price: detail[i].cost * 100};\n      item.quantity = detail[i].quantity;\n      this.cart.nbrOfItem += detail[i].quantity;\n      if(item.cost){\n        item.cost += detail[i].cost * 100;\n        this.cart.total += detail[i].cost * 100; \n      }else{\n        item.cost = detail[i].cost * 100;\n        this.cart.total += detail[i].cost * 100; \n      }\n      this.cart.items.push(item);\n      \n    }\n   this.saveCartOnStorage();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Injectable, NgZone, EventEmitter, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/script.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"payPalButtonContainer\"];\nclass ScriptService {\r\n    /**\r\n     * @param {?} zone\r\n     */\r\n    constructor(zone) {\r\n        this.zone = zone;\r\n    }\r\n    /**\r\n     * @param {?} url\r\n     * @param {?} globalVar\r\n     * @param {?} onReady\r\n     * @return {?}\r\n     */\r\n    registerScript(url, globalVar, onReady) {\r\n        /** @type {?} */\r\n        const existingGlobalVar = ((/** @type {?} */ (window)))[globalVar];\r\n        if (existingGlobalVar) {\r\n            // global variable is present = script was already loaded\r\n            this.zone.run((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                onReady(existingGlobalVar);\r\n            }));\r\n            return;\r\n        }\r\n        // prepare script elem\r\n        /** @type {?} */\r\n        const scriptElem = document.createElement('script');\r\n        scriptElem.id = this.getElemId(globalVar);\r\n        scriptElem.innerHTML = '';\r\n        scriptElem.onload = (/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.zone.run((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                onReady(((/** @type {?} */ (window)))[globalVar]);\r\n            }));\r\n        });\r\n        scriptElem.src = url;\r\n        scriptElem.async = true;\r\n        scriptElem.defer = true;\r\n        // add script to header\r\n        document.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n    }\r\n    /**\r\n     * @param {?} globalVar\r\n     * @return {?}\r\n     */\r\n    cleanup(globalVar) {\r\n        // remove script from DOM\r\n        /** @type {?} */\r\n        const scriptElem = document.getElementById(this.getElemId(globalVar));\r\n        if (scriptElem) {\r\n            scriptElem.remove();\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} globalVar\r\n     * @return {?}\r\n     */\r\n    getElemId(globalVar) {\r\n        return `ngx-paypal-script-elem-${globalVar}`;\r\n    }\r\n}\nScriptService.ɵfac = function ScriptService_Factory(t) { return new (t || ScriptService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nScriptService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ScriptService, factory: ScriptService.ɵfac });\r\n/** @nocollapse */\r\nScriptService.ctorParameters = () => [\r\n    { type: NgZone }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScriptService, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    ScriptService.prototype.zone;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/paypal-script.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass PayPalScriptService {\r\n    /**\r\n     * @param {?} scriptService\r\n     */\r\n    constructor(scriptService) {\r\n        this.scriptService = scriptService;\r\n        this.paypalWindowName = 'paypal';\r\n    }\r\n    /**\r\n     * @param {?} config\r\n     * @param {?} onReady\r\n     * @return {?}\r\n     */\r\n    registerPayPalScript(config, onReady) {\r\n        this.scriptService.registerScript(this.getUrlForConfig(config), this.paypalWindowName, onReady);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    destroyPayPalScript() {\r\n        this.scriptService.cleanup(this.paypalWindowName);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    getUrlForConfig(config) {\r\n        /** @type {?} */\r\n        const params = [\r\n            {\r\n                name: 'client-id',\r\n                value: config.clientId\r\n            }\r\n        ];\r\n        if (config.currency) {\r\n            params.push({\r\n                name: 'currency',\r\n                value: config.currency\r\n            });\r\n        }\r\n        if (config.commit) {\r\n            params.push({\r\n                name: 'commit',\r\n                value: config.commit\r\n            });\r\n        }\r\n        if (config.vault) {\r\n            params.push({\r\n                name: 'vault',\r\n                value: config.vault\r\n            });\r\n        }\r\n        if (config.extraParams) {\r\n            params.push(...config.extraParams);\r\n        }\r\n        return `https://www.paypal.com/sdk/js${this.getQueryString(params)}`;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} queryParams\r\n     * @return {?}\r\n     */\r\n    getQueryString(queryParams) {\r\n        /** @type {?} */\r\n        let queryString = '';\r\n        for (let i = 0; i < queryParams.length; i++) {\r\n            /** @type {?} */\r\n            const queryParam = queryParams[i];\r\n            if (i === 0) {\r\n                queryString += '?';\r\n            }\r\n            else {\r\n                queryString += '&';\r\n            }\r\n            queryString += `${queryParam.name}=${queryParam.value}`;\r\n        }\r\n        return queryString;\r\n    }\r\n}\nPayPalScriptService.ɵfac = function PayPalScriptService_Factory(t) { return new (t || PayPalScriptService)(ɵngcc0.ɵɵinject(ScriptService)); };\nPayPalScriptService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PayPalScriptService, factory: PayPalScriptService.ɵfac });\r\n/** @nocollapse */\r\nPayPalScriptService.ctorParameters = () => [\r\n    { type: ScriptService }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PayPalScriptService, [{\n        type: Injectable\n    }], function () { return [{ type: ScriptService }]; }, null); })();\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PayPalScriptService.prototype.paypalWindowName;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    PayPalScriptService.prototype.scriptService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/paypal.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxPaypalComponent {\r\n    /**\r\n     * @param {?} paypalScriptService\r\n     * @param {?} cdr\r\n     * @param {?} ngZone\r\n     */\r\n    constructor(paypalScriptService, cdr, ngZone) {\r\n        this.paypalScriptService = paypalScriptService;\r\n        this.cdr = cdr;\r\n        this.ngZone = ngZone;\r\n        /**\r\n         * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n         * sharing base configuration. In such a case only a single component may register script.\r\n         */\r\n        this.registerScript = true;\r\n        /**\r\n         * Emitted when paypal script is loaded\r\n         */\r\n        this.scriptLoaded = new EventEmitter();\r\n        this.ngUnsubscribe = new Subject();\r\n        /**\r\n         * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n         */\r\n        this.initializePayPal = true;\r\n    }\r\n    /**\r\n     * @param {?} content\r\n     * @return {?}\r\n     */\r\n    set payPalButtonContainer(content) {\r\n        this.payPalButtonContainerElem = content;\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ngOnChanges(changes) {\r\n        if (!this.payPalButtonContainerId) {\r\n            this.payPalButtonContainerId = this.generateElementId();\r\n        }\r\n        // first time config setup\r\n        /** @type {?} */\r\n        const config = this.config;\r\n        if (changes.config.isFirstChange()) {\r\n            if (config && this.registerScript) {\r\n                this.initPayPalScript(config, (/**\r\n                 * @param {?} payPal\r\n                 * @return {?}\r\n                 */\r\n                (payPal) => {\r\n                    // store reference to paypal global script\r\n                    this.payPal = payPal;\r\n                    this.doPayPalCheck();\r\n                }));\r\n            }\r\n        }\r\n        // changes to config\r\n        if (!changes.config.isFirstChange()) {\r\n            this.reinitialize(config);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.paypalScriptService.destroyPayPalScript();\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        this.doPayPalCheck();\r\n    }\r\n    /**\r\n     * @param {?} payPal\r\n     * @return {?}\r\n     */\r\n    customInit(payPal) {\r\n        this.payPal = payPal;\r\n        this.doPayPalCheck();\r\n    }\r\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    reinitialize(config) {\r\n        this.config = config;\r\n        this.payPal = undefined;\r\n        this.paypalScriptService.destroyPayPalScript();\r\n        this.payPalButtonContainerId = this.generateElementId();\r\n        this.initializePayPal = true;\r\n        if (this.payPalButtonContainerElem) {\r\n            while (this.payPalButtonContainerElem.nativeElement.firstChild) {\r\n                this.payPalButtonContainerElem.nativeElement.removeChild(this.payPalButtonContainerElem.nativeElement.firstChild);\r\n            }\r\n        }\r\n        this.cdr.detectChanges();\r\n        if (this.config) {\r\n            if (!this.payPal) {\r\n                this.initPayPalScript(this.config, (/**\r\n                 * @param {?} payPal\r\n                 * @return {?}\r\n                 */\r\n                (payPal) => {\r\n                    // store reference to paypal global script\r\n                    this.payPal = payPal;\r\n                    this.doPayPalCheck();\r\n                }));\r\n            }\r\n            else {\r\n                this.doPayPalCheck();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    doPayPalCheck() {\r\n        if (this.initializePayPal && this.config && this.payPal && this.payPalButtonContainerElem) {\r\n            // make sure that id is also set\r\n            if (this.payPalButtonContainerElem.nativeElement.id) {\r\n                this.initializePayPal = false;\r\n                this.initPayPal(this.config, this.payPal);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} config\r\n     * @param {?} initPayPal\r\n     * @return {?}\r\n     */\r\n    initPayPalScript(config, initPayPal) {\r\n        this.paypalScriptService.registerPayPalScript({\r\n            clientId: config.clientId,\r\n            commit: config.advanced && config.advanced.commit ? config.advanced.commit : undefined,\r\n            currency: config.currency,\r\n            vault: config.vault,\r\n            extraParams: config.advanced && config.advanced.extraQueryParams ? config.advanced.extraQueryParams : []\r\n        }, (/**\r\n         * @param {?} paypal\r\n         * @return {?}\r\n         */\r\n        (paypal) => {\r\n            this.scriptLoaded.next(paypal);\r\n            initPayPal(paypal);\r\n        }));\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    generateElementId() {\r\n        return `ngx-captcha-id-${new Date().valueOf()}`;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} config\r\n     * @param {?} paypal\r\n     * @return {?}\r\n     */\r\n    initPayPal(config, paypal) {\r\n        // Running outside angular zone prevents infinite ngDoCheck lifecycle calls\r\n        this.ngZone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            // https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page\r\n            /** @type {?} */\r\n            const createOrder = (/**\r\n             * @param {?} data\r\n             * @param {?} actions\r\n             * @return {?}\r\n             */\r\n            (data, actions) => {\r\n                return this.ngZone.run((/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    if (config.createOrderOnClient && config.createOrderOnServer) {\r\n                        throw Error(`Both 'createOrderOnClient' and 'createOrderOnServer' are defined.\r\n                    Please choose one or the other.`);\r\n                    }\r\n                    if (!config.createOrderOnClient && !config.createOrderOnServer) {\r\n                        throw Error(`Neither 'createOrderOnClient' or 'createOrderOnServer' are defined.\r\n                    Please define one of these to create order.`);\r\n                    }\r\n                    if (config.createOrderOnClient) {\r\n                        return actions.order.create(config.createOrderOnClient(data));\r\n                    }\r\n                    if (config.createOrderOnServer) {\r\n                        return config.createOrderOnServer(data);\r\n                    }\r\n                    throw Error(`Invalid state for 'createOrder'.`);\r\n                }));\r\n            });\r\n            /** @type {?} */\r\n            const createSubscription = (/**\r\n             * @param {?} data\r\n             * @param {?} actions\r\n             * @return {?}\r\n             */\r\n            (data, actions) => {\r\n                return this.ngZone.run((/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    if (config.createSubscription) {\r\n                        return config.createSubscription(data, actions);\r\n                    }\r\n                }));\r\n            });\r\n            /** @type {?} */\r\n            const onShippingChange = (/**\r\n             * @param {?} data\r\n             * @param {?} actions\r\n             * @return {?}\r\n             */\r\n            (data, actions) => {\r\n                return this.ngZone.run((/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    if (config.onShippingChange) {\r\n                        return config.onShippingChange(data, actions);\r\n                    }\r\n                }));\r\n            });\r\n            /** @type {?} */\r\n            const buttonsConfig = Object.assign(Object.assign(Object.assign({ style: config.style, onApprove: (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    return this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.onApprove) {\r\n                            config.onApprove(data, actions);\r\n                        }\r\n                        // capture on server\r\n                        if (config.authorizeOnServer) {\r\n                            return config.authorizeOnServer(data, actions);\r\n                        }\r\n                        // capture on client\r\n                        /** @type {?} */\r\n                        const onClientAuthorization = config.onClientAuthorization;\r\n                        if (onClientAuthorization) {\r\n                            actions.order.capture().then((/**\r\n                             * @param {?} details\r\n                             * @return {?}\r\n                             */\r\n                            (details) => {\r\n                                this.ngZone.run((/**\r\n                                 * @return {?}\r\n                                 */\r\n                                () => {\r\n                                    onClientAuthorization(details);\r\n                                }));\r\n                            }));\r\n                            return;\r\n                        }\r\n                    }));\r\n                }), onError: (/**\r\n                 * @param {?} error\r\n                 * @return {?}\r\n                 */\r\n                (error) => {\r\n                    this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.onError) {\r\n                            config.onError(error);\r\n                        }\r\n                    }));\r\n                }), onCancel: (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.onCancel) {\r\n                            config.onCancel(data, actions);\r\n                        }\r\n                    }));\r\n                }), onClick: (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.onClick) {\r\n                            config.onClick(data, actions);\r\n                        }\r\n                    }));\r\n                }), onInit: (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.onInit) {\r\n                            config.onInit(data, actions);\r\n                        }\r\n                    }));\r\n                }) }, ((config.createOrderOnClient || config.createOrderOnServer) && { createOrder })), (config.createSubscription && { createSubscription })), (config.onShippingChange && { onShippingChange }));\r\n            paypal.Buttons(buttonsConfig).render(`#${this.payPalButtonContainerId}`);\r\n        }));\r\n    }\r\n}\nNgxPaypalComponent.ɵfac = function NgxPaypalComponent_Factory(t) { return new (t || NgxPaypalComponent)(ɵngcc0.ɵɵdirectiveInject(PayPalScriptService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nNgxPaypalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgxPaypalComponent, selectors: [[\"ngx-paypal\"]], viewQuery: function NgxPaypalComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.payPalButtonContainer = _t.first);\n    } }, inputs: { registerScript: \"registerScript\", config: \"config\" }, outputs: { scriptLoaded: \"scriptLoaded\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 1, consts: [[3, \"id\"], [\"payPalButtonContainer\", \"\"]], template: function NgxPaypalComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.payPalButtonContainerId);\n    } }, encapsulation: 2, changeDetection: 0 });\r\n/** @nocollapse */\r\nNgxPaypalComponent.ctorParameters = () => [\r\n    { type: PayPalScriptService },\r\n    { type: ChangeDetectorRef },\r\n    { type: NgZone }\r\n];\r\nNgxPaypalComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    registerScript: [{ type: Input }],\r\n    scriptLoaded: [{ type: Output }],\r\n    payPalButtonContainer: [{ type: ViewChild, args: ['payPalButtonContainer', { static: false },] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxPaypalComponent, [{\n        type: Component,\n        args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'ngx-paypal',\n                template: `\r\n    <div #payPalButtonContainer [id]=\"payPalButtonContainerId\"></div>\r\n    `\n            }]\n    }], function () { return [{ type: PayPalScriptService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }]; }, { registerScript: [{\n            type: Input\n        }], scriptLoaded: [{\n            type: Output\n        }], payPalButtonContainer: [{\n            type: ViewChild,\n            args: ['payPalButtonContainer', { static: false }]\n        }], config: [{\n            type: Input\n        }] }); })();\r\nif (false) {\r\n    /**\r\n     * Configuration for paypal.\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.config;\r\n    /**\r\n     * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n     * sharing base configuration. In such a case only a single component may register script.\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.registerScript;\r\n    /**\r\n     * Emitted when paypal script is loaded\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.scriptLoaded;\r\n    /**\r\n     * Id of the element where PayPal button will be rendered\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.payPalButtonContainerId;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.ngUnsubscribe;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.payPalButtonContainerElem;\r\n    /**\r\n     * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.initializePayPal;\r\n    /**\r\n     * Reference to PayPal global API\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.payPal;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.paypalScriptService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.cdr;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.ngZone;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/ngx-paypal.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxPayPalModule {\r\n}\nNgxPayPalModule.ɵfac = function NgxPayPalModule_Factory(t) { return new (t || NgxPayPalModule)(); };\nNgxPayPalModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxPayPalModule });\nNgxPayPalModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        ScriptService,\n        PayPalScriptService\n    ], imports: [[\n            CommonModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxPayPalModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    NgxPaypalComponent,\n                ],\n                exports: [\n                    NgxPaypalComponent,\n                ],\n                providers: [\n                    ScriptService,\n                    PayPalScriptService\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxPayPalModule, { declarations: function () { return [NgxPaypalComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxPaypalComponent]; } }); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/paypal-models.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction IPayPalConfig() { }\r\nif (false) {\r\n    /**\r\n     * Currency - Defaults to USD if not provided\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.currency;\r\n    /**\r\n     * Use when creating order on client\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.createOrderOnClient;\r\n    /**\r\n     * Use for creating orders on server. PayPal expects you to return 'orderId' in this method\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.createOrderOnServer;\r\n    /**\r\n     * Advanced configuration\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.advanced;\r\n    /**\r\n     * Client id\r\n     * @type {?}\r\n     */\r\n    IPayPalConfig.prototype.clientId;\r\n    /**\r\n     * Shipping callback\r\n     * see https://developer.paypal.com/docs/checkout/integration-features/shipping-callback/\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onShippingChange;\r\n    /**\r\n     * Called when 'onApprove' event occurs\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onApprove;\r\n    /**\r\n     * Called when authorization on client succeeds\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onClientAuthorization;\r\n    /**\r\n     * Implement for authorizing on server side\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.authorizeOnServer;\r\n    /**\r\n     * Button style configuration\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.style;\r\n    /**\r\n     * Error handler\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onError;\r\n    /**\r\n     * Click handler\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onClick;\r\n    /**\r\n     * Cancel handler\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onCancel;\r\n    /**\r\n     * Init handler.\r\n     * can be used for validation, see: https://developer.paypal.com/docs/checkout/integration-features/validation/#\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onInit;\r\n    /**\r\n     * Create subscription handler\r\n     * https://developer.paypal.com/docs/subscriptions/integrate/\r\n     *\r\n     * Note: the vault property in the advanced configuration also has to be set to true\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.createSubscription;\r\n    /**\r\n     * Vault - must be set to true when creating subscriptions\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.vault;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayPalUrlConfig() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPayPalUrlConfig.prototype.clientId;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.currency;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.commit;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.vault;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.extraParams;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOrderDetails() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.create_time;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.update_time;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.id;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.intent;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.payer;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.status;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.links;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.purchase_units;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IClientAuthorizeCallbackData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IClientAuthorizeCallbackData.prototype.links;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ILinkDescription() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ILinkDescription.prototype.href;\r\n    /** @type {?} */\r\n    ILinkDescription.prototype.rel;\r\n    /** @type {?|undefined} */\r\n    ILinkDescription.prototype.method;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IQueryParam() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IQueryParam.prototype.name;\r\n    /** @type {?} */\r\n    IQueryParam.prototype.value;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnShippingChangeData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnShippingChangeData.prototype.paymentToken;\r\n    /** @type {?} */\r\n    IOnShippingChangeData.prototype.shipping_address;\r\n    /** @type {?|undefined} */\r\n    IOnShippingChangeData.prototype.selected_shipping_method;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnShippingChangeActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnShippingChangeActions.prototype.resolve;\r\n    /** @type {?} */\r\n    IOnShippingChangeActions.prototype.reject;\r\n    /** @type {?} */\r\n    IOnShippingChangeActions.prototype.patch;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IAdvancedConfiguration() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IAdvancedConfiguration.prototype.commit;\r\n    /** @type {?|undefined} */\r\n    IAdvancedConfiguration.prototype.extraQueryParams;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnApproveCallbackData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnApproveCallbackData.prototype.orderID;\r\n    /** @type {?} */\r\n    IOnApproveCallbackData.prototype.payerID;\r\n    /** @type {?} */\r\n    IOnApproveCallbackData.prototype.subscriptionID;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateOrderCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateOrderCallbackActions.prototype.order;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICancelCallbackData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICancelCallbackData.prototype.orderID;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnApproveCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnApproveCallbackActions.prototype.redirect;\r\n    /** @type {?} */\r\n    IOnApproveCallbackActions.prototype.restart;\r\n    /** @type {?} */\r\n    IOnApproveCallbackActions.prototype.order;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnInitCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnInitCallbackActions.prototype.enable;\r\n    /** @type {?} */\r\n    IOnInitCallbackActions.prototype.disable;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateSubscriptionCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateSubscriptionCallbackActions.prototype.subscription;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IInitCallbackData() { }\r\n/**\r\n * @record\r\n */\r\nfunction ICreateSubscriptionCallbackData() { }\r\n/**\r\n * @record\r\n */\r\nfunction IOnClickCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnClickCallbackActions.prototype.resolve;\r\n    /** @type {?} */\r\n    IOnClickCallbackActions.prototype.reject;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayPalButtonStyle() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.label;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.size;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.shape;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.color;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.layout;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.tagline;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.height;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateOrderRequest() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateOrderRequest.prototype.intent;\r\n    /** @type {?} */\r\n    ICreateOrderRequest.prototype.purchase_units;\r\n    /** @type {?|undefined} */\r\n    ICreateOrderRequest.prototype.payer;\r\n    /** @type {?|undefined} */\r\n    ICreateOrderRequest.prototype.application_context;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateSubscriptionRequest() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateSubscriptionRequest.prototype.plan_id;\r\n    /** @type {?|undefined} */\r\n    ICreateSubscriptionRequest.prototype.quantity;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayer() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.name;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.email_address;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.payer_id;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.birth_date;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.tax_info;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.address;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.phone;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IApplicationContext() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.brand_name;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.locale;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.landing_page;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.shipping_preference;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.user_action;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.payment_method;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.return_url;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.cancel_url;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPaymentMethod() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPaymentMethod.prototype.payer_selected;\r\n    /** @type {?|undefined} */\r\n    IPaymentMethod.prototype.payee_preferred;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPhone() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPhone.prototype.phone_type;\r\n    /** @type {?|undefined} */\r\n    IPhone.prototype.phone_number;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ITaxInfo() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ITaxInfo.prototype.tax_id;\r\n    /** @type {?} */\r\n    ITaxInfo.prototype.tax_id_type;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPhoneNumber() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPhoneNumber.prototype.national_number;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPurchaseUnit() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPurchaseUnit.prototype.amount;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.reference_id;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.payee;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.payment_instruction;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.description;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.custom_id;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.invoice_id;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.soft_descriptor;\r\n    /** @type {?} */\r\n    IPurchaseUnit.prototype.items;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.shipping;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayee() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPayee.prototype.email_address;\r\n    /** @type {?|undefined} */\r\n    IPayee.prototype.merchant_id;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPaymentInstructions() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPaymentInstructions.prototype.platform_fees;\r\n    /** @type {?|undefined} */\r\n    IPaymentInstructions.prototype.disbursement_mode;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPlatformFee() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPlatformFee.prototype.amount;\r\n    /** @type {?|undefined} */\r\n    IPlatformFee.prototype.payee;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ITransactionItem() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ITransactionItem.prototype.name;\r\n    /** @type {?} */\r\n    ITransactionItem.prototype.unit_amount;\r\n    /** @type {?} */\r\n    ITransactionItem.prototype.quantity;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.description;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.sku;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.category;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.tax;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ITax() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ITax.prototype.currency_code;\r\n    /** @type {?} */\r\n    ITax.prototype.value;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IUnitAmount() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IUnitAmount.prototype.currency_code;\r\n    /** @type {?} */\r\n    IUnitAmount.prototype.value;\r\n    /** @type {?|undefined} */\r\n    IUnitAmount.prototype.breakdown;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IMoney() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IMoney.prototype.currency_code;\r\n    /** @type {?} */\r\n    IMoney.prototype.value;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IUnitBreakdown() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.item_total;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.shipping;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.handling;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.tax_total;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.insurance;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.shipping_discount;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.discount;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPartyName() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.prefix;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.given_name;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.surname;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.middle_name;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.suffix;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.alternate_full_name;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.full_name;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IAddressPortable() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IAddressPortable.prototype.country_code;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.address_line_1;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.address_line_2;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.admin_area_2;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.admin_area_1;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.postal_code;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IShipping() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IShipping.prototype.name;\r\n    /** @type {?|undefined} */\r\n    IShipping.prototype.address;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ngx-paypal.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxPayPalModule, NgxPaypalComponent, PayPalScriptService, ScriptService as ɵa };\n\n"],"names":[],"sourceRoot":"webpack:///"}