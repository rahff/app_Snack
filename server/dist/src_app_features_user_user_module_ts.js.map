{"version":3,"file":"src_app_features_user_user_module_ts.js","mappings":"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","sources":["./src/app/features/user/list-commande-user/list-commande-user.component.ts","./src/app/features/user/list-commande-user/list-commande-user.component.html","./src/app/features/user/profil/profil.component.ts","./src/app/features/user/profil/profil.component.html","./src/app/features/user/user.module.ts","./src/app/features/user/user.routes.ts","./src/app/shared/services/auth.guard.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Commande } from 'src/app/shared/models/commande';\nimport { CartService } from 'src/app/shared/services/cart.service';\nimport { UserService } from 'src/app/shared/services/user.service';\n\n@Component({\n  selector: 'app-list-commande-user',\n  templateUrl: './list-commande-user.component.html',\n  styleUrls: ['./list-commande-user.component.css'],\n})\nexport class ListCommandeUserComponent implements OnInit, OnDestroy {\n  constructor(private userService: UserService,\n              private cartService: CartService,\n              private router: Router) {}\n\n  private subscription: Subscription;;\n  public commandes:{detail:any,date: Date, montant: number, numeroCommande: string}[] = [];\n  ngOnInit(): void {\n   this.subscription = this.userService.currentUser$.subscribe((userInfos: any) => {\n     this.commandes = userInfos.commandes\n     console.log(\"commandes\",userInfos.commandes);\n    });\n  }\n  refreshCommande(index: number): void {\n    this.cartService.refreshCommande(this.commandes[index].detail);\n    this.router.navigate(['/page-menu/panier']);\n  }\n  ngOnDestroy(): void{\n    this.subscription.unsubscribe();\n  }\n}\n","<h1>Historique de vos commandes</h1>\n\n\n<div class=\"container\" *ngFor=\"let commande of commandes; let i = index\">\n    <div class=\"flex-col w-100\">\n        <div class=\"date\">commande du {{commande.date | date:\"dd/MM/yyyy\"}} </div>\n    <div class=\"row\">\n        <div class=\"label\">Détail commande :</div>\n        <div class=\"detail\" *ngFor=\"let item of commande.detail\">{{item.quantity}} {{item.product}}\n        </div>\n    </div>\n        <div class=\"row\">\n            <div class=\"label\">Numéro de commande :</div>\n            <div class=\"detail\"> {{commande.numeroCommande}} </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"label\">Montant :</div>\n            <div class=\"detail\">{{commande.montant}} €</div>\n        </div>\n    </div>\n    <div class=\"action\">\n        <button (click)=\"refreshCommande(i)\" \n        class=\"btn success\">Commander à nouveau</button>\n    </div>\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Response } from 'src/app/shared/models/response.model';\nimport { User } from 'src/app/shared/models/user';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { UserService } from 'src/app/shared/services/user.service';\n\n\n@Component({\n  selector: 'app-profil',\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.css'],\n})\nexport class ProfilComponent implements OnInit {\n  @ViewChild('newName') public newName: ElementRef<HTMLInputElement>;\n  public name: string;\n  public isModif = false;\n  public userName: string;\n  public userFirstname: string;\n  public userEmail: string;\n  public userAdress: string;\n  public userId: string;\n  public updatePasswordForm: FormGroup;\n  public errorPassword = false;\n  public errorServer: string;\n  public messageSuccess: string;\n  constructor(private userService: UserService, \n              private fb: FormBuilder,\n              private alertService: AlertService) {}\n\n  ngOnInit(): void {\n      this.userService.getCurrentUser().subscribe((userInfos: any) => {\n      this.userName = userInfos.name;\n      this.userFirstname = userInfos.firstname;\n      this.userAdress = userInfos.adress;\n      this.userEmail = userInfos.email;\n      this.userId = userInfos._id;\n    });\n    this.initForm();\n    \n  }\n  updateField(name: string, butt: number): void {\n    const arrayButton = document.querySelectorAll('.se');\n    if (!this.isModif) {\n      this.name = name;\n      this.isModif = !this.isModif;\n      for (let i = 0; i < 5; i++) {\n        arrayButton[i].innerHTML =\n          i === butt\n            ? \"Annuler <i class='bi bi-skip-backward-btn'></i>\"\n            : \"Modifier <i class='bi bi-pencil-fill'></i>\";\n        if (i !== butt) {\n          arrayButton[i].setAttribute('disabled', 'true');\n        }\n      }\n    } else {\n      this.name = undefined;\n      this.isModif = false;\n      for (let i = 0; i < 5; i++) {\n        arrayButton[i].innerHTML = \"Modifier <i class='bi bi-pencil-fill'></i>\";\n        arrayButton[i].removeAttribute('disabled');\n      }\n    }\n  }\n  submitOneField(fieldName: string, id: number): void  {\n    if (fieldName === 'password') {\n      if (\n        this.updatePasswordForm.get('new').value !==\n        this.updatePasswordForm.get('confirm').value\n      ) {\n        this.errorPassword = true;\n        return;\n      }\n      const modifiedPassword = {\n        old: this.updatePasswordForm.get('old').value,\n        new: this.updatePasswordForm.get('new').value,\n        email: this.userEmail\n      };\n      console.log(this.userId);\n      \n      this.userService.updateOneField(this.userId, fieldName, modifiedPassword)\n      .then((response: Response)=>{\n        this.alertService.makeSimpleAlert(response.message, \"success\", 1800)\n      }).catch((message: string) =>{\n        this.alertService.makeSimpleAlert(message, \"error\", 1800)\n      })\n     ;\n      this.updateField(fieldName, id);\n      return;\n    }\n    const fieldModified = { update: this.newName.nativeElement.value };\n    this.userService.updateOneField(this.userId, fieldName, fieldModified).then((response: Response)=>{\n      const updatedUser: User = {\n        email: response.result.local.email,\n        name: response.result.name,\n        adress: response.result.adress,\n        firstname: response.result.firstname,\n        role: response.result.role,\n        confirm: response.result.confirm,\n        _id:  response.result._id,\n      }\n      this.userService.currentUser$.next(updatedUser)\n      this.userName = updatedUser.name;\n      this.userFirstname = updatedUser.firstname;\n      this.userAdress = updatedUser.adress;\n      this.userEmail = updatedUser.email;\n      this.alertService.makeSimpleAlert(response.message, \"success\", 1800)\n    }).catch((response: string)=>{\n      console.log('echec');\n      this.alertService.makeSimpleAlert(response, \"error\", 1800)\n      return response;\n\n    });\n    this.updateField(fieldName, id);\n  }\n  initForm(): void {\n    this.updatePasswordForm = this.fb.group({\n      old: ['', Validators.required],\n      new: ['', Validators.required, Validators.minLength(6)],\n      confirm: ['', Validators.required],\n    });\n  }\n}\n","\n<h1>Votre Profil Client</h1>\n\n<div class=\"container\">\n    <ul>\n        <li class=\"profil-item\">\n            Nom: {{userName}} <button #butt1 class=\"btn success  se\"\n             (click)=\"updateField('name',0)\"> Modifier\n             <i class=\"bi bi-pencil-fill\"></i></button>\n            <div class=\"updateField\" *ngIf=\"isModif && name === 'name'\">\n                <input #newName type=\"text\" value=\"{{userName}}\">\n                 <button (click)=\"submitOneField('name',0)\"\n                  class=\"btn btn-danger\">Ok</button>\n            </div>\n        </li>\n        <hr>\n        <li class=\"profil-item\">\n            Prénom: {{userFirstname}}<button #butt2 class=\"btn success se\"  \n            (click)=\"updateField('firstname', 1)\"> Modifier\n            <i class=\"bi bi-pencil-fill\"></i></button>\n            <div class=\"updateField\" *ngIf=\"isModif && name === 'firstname'\">\n                <input #newName type=\"text\" value=\"{{userFirstname}}\">\n                 <button (click)=\"submitOneField('firstname',1)\" \n                 class=\"btn btn-danger\">Ok</button>\n            </div>\n        </li>\n        <hr>\n        <li class=\"profil-item\">\n            Email: {{userEmail}}<button #butt3 class=\"btn success  se\"\n            (click)=\"updateField('email', 2)\"> Modifier\n            <i class=\"bi bi-pencil-fill\"></i></button>\n            <div class=\"updateField\" *ngIf=\"isModif && name === 'email'\">\n                <input #newName type=\"text\" value=\"{{userEmail}}\"> \n                <button (click)=\"submitOneField('email', 2)\" class=\"btn btn-danger\">Ok</button>\n            </div>\n        </li>\n        <hr>\n        <li class=\"profil-item last-child\">\n            Adresse: {{userAdress}} \n            <button #butt4 class=\"btn success  se\"(click)=\"updateField('adress', 3)\"> \n                Modifier<i class=\"bi bi-pencil-fill\"></i></button>\n            <div class=\"updateField last-child\" *ngIf=\"isModif && name === 'adress'\">\n                <input #newName type=\"text\" value=\"{{userAdress}}\"> \n                <button (click)=\"submitOneField('adress', 3)\" \n                class=\"btn btn-danger\">Ok</button>\n            </div>\n        </li>\n        <hr>\n        <li id=\"password\" class=\"profil-item\">\n           <div class=\"d-flex\">Mot de passe: ******** <button #butt3 class=\"btn success  se\"\n            (click)=\"updateField('password', 4)\"> Modifier\n            <i class=\"bi bi-pencil-fill\"></i></button></div> \n            <div class=\"d-flex\" *ngIf=\"isModif && name === 'password'\">\n                <div class=\"flex-col\" [formGroup]=\"updatePasswordForm\">\n                    <label>Mot de passe</label>\n                    <input  type=\"password\" value=\"\" formControlName=\"old\"> \n                    <label>Nouveau mot de passe</label>\n                    <input  type=\"password\" value=\"\" formControlName=\"new\"> \n                    <label>Confirmer</label>\n                    <input (input)=\"errorPassword = false\" type=\"password\" value=\"\" formControlName=\"confirm\"> \n                    <button (click)=\"submitOneField('password', 4)\" id=\"updatePassword\" class=\"btn btn-danger\">Modifier le mot de passe</button>\n                </div>\n            </div>\n            <p *ngIf=\"errorPassword\" class=\"error\">Les mots de passe sont différents</p>\n            <p *ngIf=\"errorServer\" class=\"error\">{{errorServer}}</p>\n            <p *ngIf=\"messageSuccess\" class=\"error\"> {{messageSuccess}} </p>\n        \n        </li>\n        <hr>\n        <div class=\"flex-center\">\n        <button routerLink=\"list-commande\" class=\"btn success\">Historique des commandes</button>\n    </div>\n    </ul>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { ProfilComponent } from 'src/app/features/user/profil/profil.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { USER_ROUTES } from './user.routes';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ListCommandeUserComponent } from './list-commande-user/list-commande-user.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    ProfilComponent,\n    ListCommandeUserComponent,\n  ],\n  imports: [\n    RouterModule.forChild(USER_ROUTES),\n    SharedModule\n  ]\n})\nexport class UserModule { }\n","import { Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/shared/services/auth.guard';\nimport { ListCommandeUserComponent } from './list-commande-user/list-commande-user.component';\n\nimport { ProfilComponent } from './profil/profil.component';\n\n\nexport const USER_ROUTES: Routes = [\n      {\n        path: '',  canActivate: [AuthGuard], component: ProfilComponent\n      },\n      {\n        path: 'list-commande', component: ListCommandeUserComponent\n      }\n];\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private userService: UserService) {}\n  canActivate(): boolean {\n    if (this.userService.jwtToken$.value.isAuth) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  \n}"],"names":[],"sourceRoot":"webpack:///"}