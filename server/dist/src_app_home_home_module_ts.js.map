{"version":3,"file":"src_app_home_home_module_ts.js","mappings":"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","sources":["./src/app/home/accueil/accueil.component.ts","./src/app/home/accueil/accueil.component.html","./src/app/home/carousel/carousel.component.ts","./src/app/home/carousel/carousel.component.html","./src/app/home/certifications/certifications.component.ts","./src/app/home/certifications/certifications.component.html","./src/app/home/contact/contact.component.ts","./src/app/home/contact/contact.component.html","./src/app/home/home.module.ts","./src/app/home/home.routes.ts","./src/app/home/login/login.component.ts","./src/app/home/login/login.component.html","./src/app/home/signup/signup.component.ts","./src/app/home/signup/signup.component.html","./src/app/shared/services/contact.service.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Cart } from 'src/app/shared/models/cart';\nimport { JwtToken } from 'src/app/shared/models/jwt-token';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { CartService } from 'src/app/shared/services/cart.service';\nimport { UserService } from 'src/app/shared/services/user.service';\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.css'],\n})\nexport class AccueilComponent implements OnInit, OnDestroy {\n  public nbrOfItem: number;\n  public isAuth = false;\n  public userName: string\n  public isLoading: boolean = false;\n  private subscription = new Subscription();\n  constructor(\n    private cartService: CartService,\n    private userService: UserService,\n    private currentRoute: ActivatedRoute,\n    private alertService: AlertService\n  ) {}\n\n  ngOnInit(): void {\n    console.log(this.currentRoute.snapshot.queryParamMap.get(\"userId\"));\n    \n    if(this.currentRoute.snapshot.queryParamMap.get(\"userId\")){\n      this.isLoading = true;\n      this.subscription.add(this.userService.confirmAccount(this.currentRoute.snapshot.queryParamMap.get(\"userId\")).subscribe((response: boolean)=>{\n        if(response){\n          this.isLoading = false;\n          this.alertService.makeSimpleAlert('Votre compte est validé !', \"success\", 2000)\n        }else{\n          this.isLoading = false;\n          this.alertService.makeSimpleAlert('Une erreur c\\'est produite ...', \"error\", 2000)\n        }\n      }))\n    }\n      this.subscription.add(this.userService.currentUser$.subscribe((user: any)=>{\n        if(user){\n          this.userName = user.firstname      \n        }\n      }))\n    this.subscription.add(this.userService.jwtToken$.subscribe((jwtToken: JwtToken) =>{\n      this.isAuth = jwtToken.isAuth;\n    }));\n \n    this.subscription.add(\n      this.cartService.cart$.subscribe((cart: Cart) => {\n        if (cart) {\n          this.nbrOfItem = cart.nbrOfItem;\n        }\n      })\n    );\n  }\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"mb-3\" *ngIf=\"!isLoading; else loader\">\n    <div class=\"container-fluid\">\n       <div routerLink=\"/profil\" class=\"profil\" *ngIf=\"isAuth\">\n        <i class=\"bi bi-file-person\"></i> <span>{{ userName }}</span>\n     </div> <div class=\"panier\" routerLink=\"/page-menu/panier\">Panier <i routerLink=\"/page-menu/panier\" class=\"bi bi-bag\">\n         <div *ngIf=\"nbrOfItem\" class=\"icon-panier\"> {{nbrOfItem}} </div></i>\n        </div> \n    </div>\n    <app-carousel></app-carousel>\n    <div routerLink=\"/page-menu/carte/6\" class=\"container flex-col\">\n        <div class=\"d-flex\">\n        <img class=\"minicarte\" src=\"../../../assets/assiette_brochette_agneau.png\" alt=\"assiette_brochette_agneau\">\n        <img class=\"minicarte\" src=\"../../../assets/assiette_adana.png\" alt=\"assiette_adana\">\n        <img class=\"minicarte\" src=\"../../../assets/pideoeuf.png\" alt=\"pideoeuf\">\n    </div>\n    <div routerLink=\"/page-menu/carte/6\" class=\"description\">Nos Plats</div>\n    </div>\n    <div class=\"container flex-col\">\n        <div class=\"d-flex\">\n            <img [routerLink]=\"['/page-menu/carte',4]\" \n            class=\"carte\" src=\"../../../assets/canette-min.png\" alt=\"boissons\">\n            <img [routerLink]=\"['/page-menu/carte',5]\"\n            class=\"carte\" src=\"../../../assets/sundae.png\" alt=\"desserts\">\n        </div>\n        <div routerLink='/page-menu/carte/4' class=\"description\">Dessert/Boissons</div>\n    </div>\n</div>\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.css'],\n})\nexport class CarouselComponent implements OnInit {\n  @ViewChild('img1') public img1: ElementRef<HTMLImageElement>;\n  @ViewChild('img2') public img2: ElementRef<HTMLImageElement>;\n  @ViewChild('img3') public img3: ElementRef<HTMLImageElement>;\n  public description = 'Kebabs';\n  public param: string = this.description\n    .slice(0, this.description.length - 1)\n    .toLowerCase();\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n  slideLeft(): void {\n    if (this.img1.nativeElement.classList.contains('active')) {\n      this.img1.nativeElement.classList.remove('active');\n      this.img3.nativeElement.classList.add('active');\n      this.description = 'Burgers';\n      this.param = this.description\n        .slice(0, this.description.length - 1)\n        .toLowerCase();\n    } else if (this.img2.nativeElement.classList.contains('active')) {\n      this.img2.nativeElement.classList.remove('active');\n      this.img1.nativeElement.classList.add('active');\n      this.description = 'Kebabs';\n      this.param = this.description\n        .slice(0, this.description.length - 1)\n        .toLowerCase();\n    } else if (this.img3.nativeElement.classList.contains('active')) {\n      this.img3.nativeElement.classList.remove('active');\n      this.img2.nativeElement.classList.add('active');\n      this.description = 'Tacos';\n      this.param = this.description\n        .slice(0, this.description.length - 1)\n        .toLowerCase();\n    }\n  }\n  slideRight(): void {\n    if (this.img1.nativeElement.classList.contains('active')) {\n      this.img1.nativeElement.classList.remove('active');\n      this.img2.nativeElement.classList.add('active');\n      this.description = 'Tacos';\n      this.param = this.description\n        .slice(0, this.description.length - 1)\n        .toLowerCase();\n    } else if (this.img2.nativeElement.classList.contains('active')) {\n      this.img2.nativeElement.classList.remove('active');\n      this.img3.nativeElement.classList.add('active');\n      this.description = 'Burgers';\n      this.param = this.description\n        .slice(0, this.description.length - 1)\n        .toLowerCase();\n    } else if (this.img3.nativeElement.classList.contains('active')) {\n      this.img3.nativeElement.classList.remove('active');\n      this.img1.nativeElement.classList.add('active');\n      this.description = 'Kebabs';\n      this.param = this.description\n        .slice(0, this.description.length - 1)\n        .toLowerCase();\n    }\n  }\n}\n","<div class=\"container\">\n    <h1>Bienvenu chez Taco</h1>\n    <div class=\"carousel-content\">\n    <img #img1 [routerLink]=\"['/page-menu/carte',2]\"  src=\"../../../assets/O-Kebab.png\" alt=\"kebab\" class=\"carousel active\">\n    <img #img2 [routerLink]=\"['/page-menu/carte',1]\" src=\"../../../assets/tacos_home.png\" alt=\"tacos\" class=\"carousel\">\n    <img #img3 [routerLink]=\"['/page-menu/carte',3]\" src=\"../../../assets/impossible_burger_fmt.png\" alt=\"hamburger\" class=\"carousel\">\n    </div>\n     <i (click)=\"slideLeft()\" id=\"gauche\" class=\"bi bi-caret-left\"></i>\n     <i (click)=\"slideRight()\" id=\"droite\" class=\"bi bi-caret-right\"></i>\n     <div routerLink=\"/page-menu/{{param}}\" class=\"description\">{{description}}</div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-certifications',\n  templateUrl: './certifications.component.html',\n  styleUrls: ['./certifications.component.css']\n})\nexport class CertificationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Certifications</h1>\n\n<div class=\"container flex-col\">\n    <img src=\"../../assets/Certification-Hygiène-Cuisine-1.jpg\" alt=\"certification_hygiene\">\n    <hr>\n    <img src=\"../../assets/certification1.jpg\" alt=\"certification\">\n    <hr>\n    <img src=\"../../assets/certification3.jpg\" alt=\"certification_halal\">\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { ContactService } from 'src/app/shared/services/contact.service';\nimport { UserService } from 'src/app/shared/services/user.service';\n\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css'],\n})\nexport class ContactComponent implements OnInit, OnDestroy {\n  get name() {\n    return this.contactForm.get('name');\n  }\n  get firstname() {\n    return this.contactForm.get('firstname');\n  }\n  get email() {\n    return this.contactForm.get('email');\n  }\n  get message() {\n    return this.contactForm.get('message');\n  }\n\n  public localName: string;\n  public localfirstName: string;\n  public localemail: string;\n  private subscription: Subscription;\n  public isLoading: boolean = false;\n  public contactForm: FormGroup;\n  constructor(private fb: FormBuilder,\n              private userService: UserService,\n              private contactService: ContactService,\n              private router: Router,\n              private alertService: AlertService) {}\n\n  ngOnInit(): void {\n    this.subscription = this.userService.currentUser$.subscribe((user: any) =>{\n      this.localName = user.name;\n      this.localfirstName = user.firstname;\n      this.localemail = user.email;\n    })\n    this.initForm();\n    console.log(this.name);\n  }\n\n  initForm(): void {\n    this.contactForm = this.fb.group({\n      name: [this.localName, Validators.required],\n      firstname: [this.localfirstName, Validators.required],\n      email: [this.localemail, [Validators.required, Validators.email]],\n      message: ['', Validators.required],\n    });\n  }\n  onSubmit(): void {\n    if (this.contactForm.invalid) {\n      this.alertService.makeSimpleAlert('Veuillez remplir tous les champs svp', \"info\", 1500)\n      return;\n    } else {\n      this.isLoading = true;\n      const body = {\n        name: this.name.value,\n        firstname: this.firstname.value,\n        email: this.email.value,\n        message: this.message.value,\n      };\n      this.contactService.postMessage(body).then((res: boolean)=>{\n        if(res){\n          this.isLoading = false\n          this.alertService.makeSimpleAlert('Votre message à bien été envoyé', \"success\", 1800).then((res: any)=>{\n            this.contactForm.reset();\n            this.router.navigate(['/']);\n          })\n        }\n      }).catch((res: boolean)=>{\n        this.isLoading = false\n        this.alertService.makeSimpleAlert('Une erreur est survenu :/', \"error\", 2000)\n      })\n    }\n  }\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<h1>Nous Contacter</h1>\n\n<form class=\"form-group\"[formGroup]=\"contactForm\" *ngIf=\"!isLoading;else loader\">\n    <div class=\"d-flex\">\n        <div class=\"flex-col\">\n            <div class=\"container-fluid\">\n                <label for=\"name\">Votre Nom :</label>\n            </div>\n            <div class=\"container-fluid\">\n                <label for=\"name\">Votre Prénom :</label>\n            </div>\n            <div class=\"container-fluid\">\n                <label for=\"name\">Votre e-mail :</label>\n            </div>\n            <div class=\"container-fluid\">\n                <label for=\"name\">Votre message :</label>\n            </div>\n          </div>\n          <div class=\"flex-col\">\n              <div class=\"container-fluid\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"name\" />\n                <p class=\"error\" *ngIf=\"name.invalid && name.touched\">Champs requis</p>\n              </div>\n              <div class=\"container-fluid\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"firstname\" />\n                <p class=\"error\" *ngIf=\"firstname.invalid && firstname.touched\">Champs requis</p>\n              </div>\n              <div class=\"container-fluid\">\n                <input type=\"email\" class=\"form-control\"formControlName=\"email\" />\n                <p class=\"error\" *ngIf=\"email.invalid && email.touched\">Champs requis</p>\n              </div>\n              <div class=\"container-fluid\">\n                <textarea type=\"email\" rows=\"2\" class=\"form-control\" formControlName=\"message\"></textarea>\n                <p class=\"error\" *ngIf=\"message.invalid && message.touched\">Champs requis</p>\n              </div>\n          </div>\n    </div>\n    <button type=\"button\" (click)=\"onSubmit()\" class=\"btn btn success\">Envoyer</button>\n  </form>\n  <ng-template #loader>\n    <app-loader></app-loader>\n  </ng-template>","import { NgModule } from '@angular/core';\n\nimport { AccueilComponent } from './accueil/accueil.component';\nimport { CarouselComponent } from './carousel/carousel.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { HOME_ROUTES } from './home.routes';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { CertificationsComponent } from './certifications/certifications.component';\nimport { ContactComponent } from './contact/contact.component';\n\n\n@NgModule({\n  declarations: [\n    AccueilComponent,\n    CarouselComponent,\n    LoginComponent,\n    SignupComponent,\n    CertificationsComponent,\n    ContactComponent\n  ],\n  imports: [\n    SharedModule,\n    RouterModule.forChild(HOME_ROUTES)\n  ]\n})\nexport class HomeModule { }\n","import { Routes } from '@angular/router';\nimport { AccueilComponent } from './accueil/accueil.component';\nimport { CertificationsComponent } from './certifications/certifications.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nexport const HOME_ROUTES: Routes = [\n    {\n        path: '', component: AccueilComponent \n    },\n    {\n        path: 'contact', component: ContactComponent\n    },\n    {\n        path: 'certification', component: CertificationsComponent\n    },\n    {\n        path: 'login', component: LoginComponent\n    },\n    {\n        path: 'signup', component: SignupComponent\n    }\n];\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { UserService } from 'src/app/shared/services/user.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n  public localEmail: string;\n  public loading: boolean = false;\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private router: Router,\n    private alertService: AlertService\n  ) {}\n\n  ngOnInit(): void {\n    const localUser = JSON.parse(localStorage.getItem('user'))\n    if(localUser){\n      this.localEmail = localUser.email\n    }\n    this.initForm();\n  }\n  initForm(): void {\n    this.loginForm = this.fb.group({\n      email: [this.localEmail, [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      this.loading = true;\n      const body = {\n        email: this.loginForm.get('email').value,\n        password: this.loginForm.get('password').value,\n      };\n      this.userService\n        .login(body)\n        .then((response: boolean) => {\n          if (response) {\n            this.loading = false;\n            this.loginForm.reset();\n            this.alertService.makeSimpleAlert('Bienvenue, vous êtes connecté', \"success\", 1800).then((res: any)=>{\n              this.router.navigate(['/']);\n            });\n          }\n        })\n        .catch((message: string) => {\n          this.loading = false;\n          this.alertService.makeSimpleAlert(message, \"error\", 1800)\n          this.initForm();\n        });\n    }\n  }\n}\n","\n<h1>Connectez-vous ou créer un compte avant de passer commande</h1>\n\n<div class=\"container flex-center\"><button routerLink='/page-menu' class=\"btn success\">Voir la carte</button></div>\n<div class=\"invisible\" *ngIf=\"!loading;else loader\">\n    <form class=\"form-group\" [formGroup]=\"loginForm\">\n        <div class=\"d-flex\">\n            <div class=\"flex-col\">\n               \n                <div class=\"container-fluid\">\n                    <label for=\"name\">Votre e-mail :</label>\n                </div>\n                <div class=\"container-fluid\">\n                    <label for=\"name\">Mot de passe :</label>\n                </div>\n              </div>\n              <div class=\"flex-col\">\n                  <div class=\"container-fluid\">\n                    <input type=\"email\" class=\"form-control\" formControlName=\"email\" />\n                    <p *ngIf=\"loginForm.get('email').invalid && loginForm.get('email').touched \" class=\"error\">Indiquez votre e-mail</p>\n                  </div>\n                  <div class=\"container-fluid\">\n                    <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n                    <p *ngIf=\"loginForm.get('password').invalid && loginForm.get('password').touched \" class=\"error\">champ requis</p>\n                  </div>\n                  </div>\n        </div>\n        <button (click)=\"onSubmit()\" [disabled]=\"loginForm.invalid\" \n        type=\"button\" class=\"btn btn success\">Valider</button>\n    </form>\n    <div class=\"container flex-center success\">\n        <p routerLink=\"/signup\">Vous n'avez pas encore de compte ? Créer en un ici </p>\n    </div>\n</div>\n<ng-template #loader>\n    <app-loader></app-loader>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { UserService } from 'src/app/shared/services/user.service';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  get name(): AbstractControl {\n    return this.signupForm.get('name');\n  }\n  get firstname(): AbstractControl {\n    return this.signupForm.get('firstname');\n  }\n  get adress(): AbstractControl {\n    return this.signupForm.get('adress');\n  }\n  get email(): AbstractControl {\n    return this.signupForm.get('email');\n  }\n  get password(): AbstractControl {\n    return this.signupForm.get('password');\n  }\n  get confirm(): AbstractControl {\n    return this.signupForm.get('confirm');\n  }\n  public signupForm: FormGroup;\n  public errorServer: string;\n  public messageSuccess: string;\n  public noValidForm = false;\n  public noMatchedPassword = false;\n  public loading: boolean = false;\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private router: Router,\n    private alertService: AlertService\n  ) {}\n\n  ngOnInit(): void {\n    this.signupForm = this.fb.group({\n      name: ['', Validators.required],\n      firstname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      adress: [''],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirm: [''],\n    });\n  }\n  onSubmit(): void {\n    if (this.signupForm.invalid) {\n      this.alertService.makeSimpleAlert('Veuillez renseigner tous les champs svp', 'info', 2000)\n      return;\n    } else if (this.password.value !== this.confirm.value) {\n      this.alertService.makeSimpleAlert('Les mots de passe ne correspondent pas !', 'warning', 2000)\n      return;\n    } else {\n      this.loading = true;\n      const body = {\n        name: this.name.value,\n        firstname: this.firstname.value,\n        email: this.email.value,\n        adress: this.adress.value,\n        password: this.password.value,\n        confirm: false\n      };\n      this.userService\n        .verifEmail(body.email)\n        .then(() => {\n          this.userService\n            .signup(body)\n            .then((message: string) => {\n              this.loading = false;\n              this.alertService.makeSimpleAlert(message, \"success\", 1700).then((res: any)=>{\n              this.signupForm.reset();\n              this.router.navigate(['/']);\n             })\n            })\n            .catch((message: number) => {\n              if(message === 11000){\n                this.loading = false;\n                this.alertService.makeSimpleAlert(\"Cette email est déjà enregistré\", \"error\", 1700);\n              }else{\n                this.alertService.makeSimpleAlert(\"Une erreur est survenue ...\", \"error\", 1700);\n              }\n            });\n          this.signupForm.reset();\n        })\n        .catch((message: number) => {\n          if(message === 11000){\n            this.loading = false;\n            this.alertService.makeSimpleAlert(\"Cette email est déjà enregistré\", \"error\", 1700);\n          }else{\n            this.alertService.makeSimpleAlert(\"Une erreur est survenue ...\", \"error\", 1700);\n          }\n        });\n    }\n  }\n}\n","<h1>Créer un Compte</h1>\n<form class=\"form-group\" [formGroup]=\"signupForm\" *ngIf=\"!loading;else loader\">\n    <div class=\"d-flex\">\n        <div class=\"flex-col\">\n            <div class=\"container-fluid\">\n                <label>Votre Nom :</label>\n            </div>\n            <div class=\"container-fluid\">\n                <label>Votre Prénom :</label>\n            </div>\n            <div class=\"container-fluid\">\n                <label>Votre e-mail :</label>\n            </div>\n            <div class=\"container-fluid\">\n                <label>Adresse :</label>\n            </div>\n            <div class=\"container-fluid\">\n                <label>Mot de passe:</label>\n            </div>\n            <div class=\"container-fluid\">\n                <label>Confirmation:</label>\n            </div>\n          </div>\n          <div class=\"flex-col\">\n              <div class=\"container-fluid\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"name\" />\n                <p *ngIf=\"name.invalid && name.touched\" class=\"error\">Champ requis</p>\n              </div>\n              <div class=\"container-fluid\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"firstname\" />\n                <p *ngIf=\"firstname.invalid && firstname.touched\" class=\"error\">Champ requis</p>\n              </div>\n              <div class=\"container-fluid\">\n                <input type=\"email\" class=\"form-control\" formControlName=\"email\" />\n                <p *ngIf=\"email.invalid && email.touched\" class=\"error\">Champ requis</p>\n              </div>\n              <div class=\"container-fluid\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"adress\" />\n              </div>\n              <div class=\"container-fluid\">\n                <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n                <p *ngIf=\"password.invalid && password.touched\" class=\"error\">Champ requis</p>\n              </div>\n              <div class=\"container-fluid\">\n                <input type=\"password\" (input)=\"!noMatchedPassword\" class=\"form-control\" formControlName=\"confirm\">\n                <p *ngIf=\"confirm.invalid && confirm.touched\" class=\"error\">minimum 6 caractères</p>\n              </div>\n          </div>\n    </div>\n    <button (click)=\"onSubmit()\" type=\"button\" class=\"btn btn success\">Valider</button>\n  </form>\n\n  <ng-template #loader>\n    <app-loader></app-loader>\n  </ng-template>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Response } from '../models/response.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  private API = environment.API\n  constructor(private http: HttpClient) { }\n  postMessage(body:any):Promise<boolean>{\n    return new Promise((resolve, reject)=>{\n      this.http.post(this.API + \"contact\", body).subscribe((response: Response)=>{\n        if(response.status === 200){\n          resolve(true)\n        }else{\n          reject(false)\n        }\n      })\n    })\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}